# This was the script uses to verify the ynBNB TransparentUpgradeableProxy on BscScan
PROXY_CONTRACT_TO_VERIFY=0x304B5845b9114182ECb4495Be4C91a273b74B509

# NOTE: Get the constructor args from Etherscan. You can get this from the Verify and Publish section after it fails, it will tell you what it wants from the contract bytecode
# The last section of the byte code is the constructor. There seems to be a difference between how cast cosntructos abi-encoded data and how Etherscan does.
PROXY_CONSTRUCTOR_DATA=00000000000000000000000080815ee920bd9d856562633c36d3eb0e43cb15e2000000000000000000000000d53044093f757e8a56fed3ccfd0af5ad67aead4a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001e40e12d3d5000000000000000000000000b0b84d294e0c75a6abe60171b70edeb2efd14a1b00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000721688652dea9cabec70bd99411eaeab9485d4360000000000000000000000000000000000000000000000000000000000014a78000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000001f5969656c644e6573743a20424e42204c69717569642052657374616b696e67000000000000000000000000000000000000000000000000000000000000000005796e424e420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000721688652dea9cabec70bd99411eaeab9485d4360000000000000000000000000000000000000000000000000000000000000001000000000000000000000000721688652dea9cabec70bd99411eaeab9485d43600000000000000000000000000000000000000000000000000000000

forge verify-contract $PROXY_CONTRACT_TO_VERIFY \
  --constructor-args $PROXY_CONSTRUCTOR_DATA \
  --num-of-optimizations 200 \
  --etherscan-api-key $ETHERSCAN_API_KEY \
  --rpc-url $RPC_URL \
  --watch